<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmz.dao.CourseArrangementMapper">
  <resultMap id="BaseResultMap" type="com.lmz.vo.CourseArrangement">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cid" jdbcType="VARCHAR" property="cid" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_hour" jdbcType="INTEGER" property="courseHour" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="teacher" jdbcType="VARCHAR" property="teacher" />
    <result column="semester" jdbcType="INTEGER" property="semester" />
    <result column="instruction" jdbcType="VARCHAR" property="instruction" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cid, course_name, course_hour, start_time, profession, teacher, semester, instruction, 
    creator, gmt_create
  </sql>
  <select id="selectByExample" parameterType="com.lmz.vo.CourseArrangementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_arrangement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_arrangement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course_arrangement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lmz.vo.CourseArrangementExample">
    delete from course_arrangement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lmz.vo.CourseArrangement">
    insert into course_arrangement (id, cid, course_name, 
      course_hour, start_time, profession, 
      teacher, semester, instruction, 
      creator, gmt_create)
    values (#{id,jdbcType=INTEGER}, #{cid,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{courseHour,jdbcType=INTEGER}, #{startTime,jdbcType=VARCHAR}, #{profession,jdbcType=VARCHAR}, 
      #{teacher,jdbcType=VARCHAR}, #{semester,jdbcType=INTEGER}, #{instruction,jdbcType=VARCHAR}, 
      #{creator,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lmz.vo.CourseArrangement">
    insert into course_arrangement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseHour != null">
        course_hour,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="teacher != null">
        teacher,
      </if>
      <if test="semester != null">
        semester,
      </if>
      <if test="instruction != null">
        instruction,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseHour != null">
        #{courseHour,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="semester != null">
        #{semester,jdbcType=INTEGER},
      </if>
      <if test="instruction != null">
        #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lmz.vo.CourseArrangementExample" resultType="java.lang.Long">
    select count(*) from course_arrangement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course_arrangement
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseHour != null">
        course_hour = #{record.courseHour,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.profession != null">
        profession = #{record.profession,jdbcType=VARCHAR},
      </if>
      <if test="record.teacher != null">
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.semester != null">
        semester = #{record.semester,jdbcType=INTEGER},
      </if>
      <if test="record.instruction != null">
        instruction = #{record.instruction,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course_arrangement
    set id = #{record.id,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      course_hour = #{record.courseHour,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=VARCHAR},
      profession = #{record.profession,jdbcType=VARCHAR},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      semester = #{record.semester,jdbcType=INTEGER},
      instruction = #{record.instruction,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lmz.vo.CourseArrangement">
    update course_arrangement
    <set>
      <if test="cid != null">
        cid = #{cid,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseHour != null">
        course_hour = #{courseHour,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="semester != null">
        semester = #{semester,jdbcType=INTEGER},
      </if>
      <if test="instruction != null">
        instruction = #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lmz.vo.CourseArrangement">
    update course_arrangement
    set cid = #{cid,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_hour = #{courseHour,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      semester = #{semester,jdbcType=INTEGER},
      instruction = #{instruction,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>