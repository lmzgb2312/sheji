<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmz.dao.PersonalInformationMapper">
  <resultMap id="BaseResultMap" type="com.lmz.vo.PersonalInformation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="student_password" jdbcType="VARCHAR" property="studentPassword" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="tutor" jdbcType="VARCHAR" property="tutor" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_name, student_id, student_password, gender, college, major, contact, 
    email, tutor
  </sql>
  <select id="selectByExample" parameterType="com.lmz.vo.PersonalInformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from personal_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from personal_information
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from personal_information
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lmz.vo.PersonalInformationExample">
    delete from personal_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lmz.vo.PersonalInformation">
    insert into personal_information (id, student_name, student_id, 
      student_password, gender, college, 
      major, contact, email, 
      tutor)
    values (#{id,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR}, 
      #{studentPassword,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{tutor,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lmz.vo.PersonalInformation">
    insert into personal_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="studentPassword != null">
        student_password,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="tutor != null">
        tutor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentPassword != null">
        #{studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tutor != null">
        #{tutor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lmz.vo.PersonalInformationExample" resultType="java.lang.Long">
    select count(*) from personal_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update personal_information
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentPassword != null">
        student_password = #{record.studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.tutor != null">
        tutor = #{record.tutor,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update personal_information
    set id = #{record.id,jdbcType=INTEGER},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      student_password = #{record.studentPassword,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      tutor = #{record.tutor,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lmz.vo.PersonalInformation">
    update personal_information
    <set>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentPassword != null">
        student_password = #{studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tutor != null">
        tutor = #{tutor,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lmz.vo.PersonalInformation">
    update personal_information
    set student_name = #{studentName,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=VARCHAR},
      student_password = #{studentPassword,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      tutor = #{tutor,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>