<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmz.dao.LaboratoryArrangementMapper">
  <resultMap id="BaseResultMap" type="com.lmz.vo.LaboratoryArrangement">
    <id column="lab_id" jdbcType="INTEGER" property="labId" />
    <result column="lab_name" jdbcType="VARCHAR" property="labName" />
    <result column="lab_teacher" jdbcType="VARCHAR" property="labTeacher" />
    <result column="lab_instruction" jdbcType="VARCHAR" property="labInstruction" />
    <result column="lab_start_time" jdbcType="TIMESTAMP" property="labStartTime" />
    <result column="lab_end_time" jdbcType="TIMESTAMP" property="labEndTime" />
    <result column="lab_person_amount" jdbcType="INTEGER" property="labPersonAmount" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="lab_person_amount_now" jdbcType="INTEGER" property="labPersonAmountNow" />
    <result column="time_period" jdbcType="INTEGER" property="timePeriod" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    lab_id, lab_name, lab_teacher, lab_instruction, lab_start_time, lab_end_time, lab_person_amount, 
    gmt_created, gmt_modified, lab_person_amount_now, time_period
  </sql>
  <select id="selectByExample" parameterType="com.lmz.vo.LaboratoryArrangementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from laboratory_arrangement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from laboratory_arrangement
    where lab_id = #{labId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from laboratory_arrangement
    where lab_id = #{labId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lmz.vo.LaboratoryArrangementExample">
    delete from laboratory_arrangement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lmz.vo.LaboratoryArrangement">
    insert into laboratory_arrangement (lab_id, lab_name, lab_teacher, 
      lab_instruction, lab_start_time, lab_end_time, 
      lab_person_amount, gmt_created, gmt_modified, 
      lab_person_amount_now, time_period)
    values (#{labId,jdbcType=INTEGER}, #{labName,jdbcType=VARCHAR}, #{labTeacher,jdbcType=VARCHAR}, 
      #{labInstruction,jdbcType=VARCHAR}, #{labStartTime,jdbcType=TIMESTAMP}, #{labEndTime,jdbcType=TIMESTAMP}, 
      #{labPersonAmount,jdbcType=INTEGER}, #{gmtCreated,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{labPersonAmountNow,jdbcType=INTEGER}, #{timePeriod,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lmz.vo.LaboratoryArrangement">
    insert into laboratory_arrangement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="labId != null">
        lab_id,
      </if>
      <if test="labName != null">
        lab_name,
      </if>
      <if test="labTeacher != null">
        lab_teacher,
      </if>
      <if test="labInstruction != null">
        lab_instruction,
      </if>
      <if test="labStartTime != null">
        lab_start_time,
      </if>
      <if test="labEndTime != null">
        lab_end_time,
      </if>
      <if test="labPersonAmount != null">
        lab_person_amount,
      </if>
      <if test="gmtCreated != null">
        gmt_created,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="labPersonAmountNow != null">
        lab_person_amount_now,
      </if>
      <if test="timePeriod != null">
        time_period,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="labId != null">
        #{labId,jdbcType=INTEGER},
      </if>
      <if test="labName != null">
        #{labName,jdbcType=VARCHAR},
      </if>
      <if test="labTeacher != null">
        #{labTeacher,jdbcType=VARCHAR},
      </if>
      <if test="labInstruction != null">
        #{labInstruction,jdbcType=VARCHAR},
      </if>
      <if test="labStartTime != null">
        #{labStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="labEndTime != null">
        #{labEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="labPersonAmount != null">
        #{labPersonAmount,jdbcType=INTEGER},
      </if>
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="labPersonAmountNow != null">
        #{labPersonAmountNow,jdbcType=INTEGER},
      </if>
      <if test="timePeriod != null">
        #{timePeriod,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lmz.vo.LaboratoryArrangementExample" resultType="java.lang.Long">
    select count(*) from laboratory_arrangement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select id="countByTime" parameterType="com.lmz.vo.LaboratoryArrangement" resultType="java.lang.Long">
    select count(*) from laboratory_arrangement where lab_name = #{labName,jdbcType=VARCHAR}
   	<if test="labStartTime != null and labStartTime != '' ">
		  and lab_start_time <![CDATA[ <= ]]>#{labStartTime,jdbcType=VARCHAR}
	</if>
	<if test="labEndTime != null and labEndTime != '' ">
		  	and lab_End_time <![CDATA[ >= ]]>#{labEndTime,jdbcType=VARCHAR}
	</if>
  </select>
  
    <select id="countByTime1" parameterType="com.lmz.vo.LaboratoryArrangement" resultType="java.lang.Long">
    select count(*) from laboratory_arrangement where lab_name = #{labName,jdbcType=VARCHAR}
   	<if test="labStartTime != null and labStartTime != '' ">
		  and lab_start_time <![CDATA[ >= ]]>#{labStartTime,jdbcType=VARCHAR}
	</if>
	<if test="labEndTime != null and labEndTime != '' ">
		  	and lab_start_time <![CDATA[ <= ]]>#{labEndTime,jdbcType=VARCHAR}
	</if>
  </select>
  
    <select id="countByTime2" parameterType="com.lmz.vo.LaboratoryArrangement" resultType="java.lang.Long">
    select count(*) from laboratory_arrangement where lab_name = #{labName,jdbcType=VARCHAR}
   	<if test="labStartTime != null and labStartTime != '' ">
		  and lab_End_time <![CDATA[ >= ]]>#{labStartTime,jdbcType=VARCHAR}
	</if>
	<if test="labEndTime != null and labEndTime != '' ">
		  	and lab_End_time <![CDATA[ <= ]]>#{labEndTime,jdbcType=VARCHAR}
	</if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map">
    update laboratory_arrangement
    <set>
      <if test="record.labId != null">
        lab_id = #{record.labId,jdbcType=INTEGER},
      </if>
      <if test="record.labName != null">
        lab_name = #{record.labName,jdbcType=VARCHAR},
      </if>
      <if test="record.labTeacher != null">
        lab_teacher = #{record.labTeacher,jdbcType=VARCHAR},
      </if>
      <if test="record.labInstruction != null">
        lab_instruction = #{record.labInstruction,jdbcType=VARCHAR},
      </if>
      <if test="record.labStartTime != null">
        lab_start_time = #{record.labStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.labEndTime != null">
        lab_end_time = #{record.labEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.labPersonAmount != null">
        lab_person_amount = #{record.labPersonAmount,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreated != null">
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.labPersonAmountNow != null">
        lab_person_amount_now = #{record.labPersonAmountNow,jdbcType=INTEGER},
      </if>
      <if test="record.timePeriod != null">
        time_period = #{record.timePeriod,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update laboratory_arrangement
    set lab_id = #{record.labId,jdbcType=INTEGER},
      lab_name = #{record.labName,jdbcType=VARCHAR},
      lab_teacher = #{record.labTeacher,jdbcType=VARCHAR},
      lab_instruction = #{record.labInstruction,jdbcType=VARCHAR},
      lab_start_time = #{record.labStartTime,jdbcType=TIMESTAMP},
      lab_end_time = #{record.labEndTime,jdbcType=TIMESTAMP},
      lab_person_amount = #{record.labPersonAmount,jdbcType=INTEGER},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      lab_person_amount_now = #{record.labPersonAmountNow,jdbcType=INTEGER},
      time_period = #{record.timePeriod,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lmz.vo.LaboratoryArrangement">
    update laboratory_arrangement
    <set>
      <if test="labName != null">
        lab_name = #{labName,jdbcType=VARCHAR},
      </if>
      <if test="labTeacher != null">
        lab_teacher = #{labTeacher,jdbcType=VARCHAR},
      </if>
      <if test="labInstruction != null">
        lab_instruction = #{labInstruction,jdbcType=VARCHAR},
      </if>
      <if test="labStartTime != null">
        lab_start_time = #{labStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="labEndTime != null">
        lab_end_time = #{labEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="labPersonAmount != null">
        lab_person_amount = #{labPersonAmount,jdbcType=INTEGER},
      </if>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="labPersonAmountNow != null">
        lab_person_amount_now = #{labPersonAmountNow,jdbcType=INTEGER},
      </if>
      <if test="timePeriod != null">
        time_period = #{timePeriod,jdbcType=INTEGER},
      </if>
    </set>
    where lab_id = #{labId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lmz.vo.LaboratoryArrangement">
    update laboratory_arrangement
    set lab_name = #{labName,jdbcType=VARCHAR},
      lab_teacher = #{labTeacher,jdbcType=VARCHAR},
      lab_instruction = #{labInstruction,jdbcType=VARCHAR},
      lab_start_time = #{labStartTime,jdbcType=TIMESTAMP},
      lab_end_time = #{labEndTime,jdbcType=TIMESTAMP},
      lab_person_amount = #{labPersonAmount,jdbcType=INTEGER},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      lab_person_amount_now = #{labPersonAmountNow,jdbcType=INTEGER},
      time_period = #{timePeriod,jdbcType=INTEGER}
    where lab_id = #{labId,jdbcType=INTEGER}
  </update>
</mapper>