<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmz.dao.LabReservationMapper">
  <resultMap id="BaseResultMap" type="com.lmz.vo.LabReservation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="lab_name" jdbcType="VARCHAR" property="labName" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
    <result column="lab_teacher" jdbcType="VARCHAR" property="labTeacher" />
    <result column="lab_current" jdbcType="INTEGER" property="labCurrent" />
    <result column="lab_max" jdbcType="INTEGER" property="labMax" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="lab_id" jdbcType="INTEGER" property="labId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, lab_name, start_time, end_time, lab_teacher, lab_current, lab_max, student_name, 
    student_id, lab_id
  </sql>
  <select id="selectByExample" parameterType="com.lmz.vo.LabReservationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lab_reservation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lab_reservation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lab_reservation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lmz.vo.LabReservationExample">
    delete from lab_reservation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lmz.vo.LabReservation">
    insert into lab_reservation (id, lab_name, start_time, 
      end_time, lab_teacher, lab_current, 
      lab_max, student_name, student_id, 
      lab_id)
    values (#{id,jdbcType=INTEGER}, #{labName,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR}, 
      #{endTime,jdbcType=VARCHAR}, #{labTeacher,jdbcType=VARCHAR}, #{labCurrent,jdbcType=INTEGER}, 
      #{labMax,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR}, 
      #{labId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lmz.vo.LabReservation">
    insert into lab_reservation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="labName != null">
        lab_name,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="labTeacher != null">
        lab_teacher,
      </if>
      <if test="labCurrent != null">
        lab_current,
      </if>
      <if test="labMax != null">
        lab_max,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="labId != null">
        lab_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="labName != null">
        #{labName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="labTeacher != null">
        #{labTeacher,jdbcType=VARCHAR},
      </if>
      <if test="labCurrent != null">
        #{labCurrent,jdbcType=INTEGER},
      </if>
      <if test="labMax != null">
        #{labMax,jdbcType=INTEGER},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="labId != null">
        #{labId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lmz.vo.LabReservationExample" resultType="java.lang.Long">
    select count(*) from lab_reservation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lab_reservation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.labName != null">
        lab_name = #{record.labName,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
      <if test="record.labTeacher != null">
        lab_teacher = #{record.labTeacher,jdbcType=VARCHAR},
      </if>
      <if test="record.labCurrent != null">
        lab_current = #{record.labCurrent,jdbcType=INTEGER},
      </if>
      <if test="record.labMax != null">
        lab_max = #{record.labMax,jdbcType=INTEGER},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.labId != null">
        lab_id = #{record.labId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lab_reservation
    set id = #{record.id,jdbcType=INTEGER},
      lab_name = #{record.labName,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=VARCHAR},
      lab_teacher = #{record.labTeacher,jdbcType=VARCHAR},
      lab_current = #{record.labCurrent,jdbcType=INTEGER},
      lab_max = #{record.labMax,jdbcType=INTEGER},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      lab_id = #{record.labId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lmz.vo.LabReservation">
    update lab_reservation
    <set>
      <if test="labName != null">
        lab_name = #{labName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="labTeacher != null">
        lab_teacher = #{labTeacher,jdbcType=VARCHAR},
      </if>
      <if test="labCurrent != null">
        lab_current = #{labCurrent,jdbcType=INTEGER},
      </if>
      <if test="labMax != null">
        lab_max = #{labMax,jdbcType=INTEGER},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="labId != null">
        lab_id = #{labId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lmz.vo.LabReservation">
    update lab_reservation
    set lab_name = #{labName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      lab_teacher = #{labTeacher,jdbcType=VARCHAR},
      lab_current = #{labCurrent,jdbcType=INTEGER},
      lab_max = #{labMax,jdbcType=INTEGER},
      student_name = #{studentName,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=VARCHAR},
      lab_id = #{labId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getByLabNameAndSId"  resultMap="BaseResultMap">
    select * from lab_reservation WHERE   lab_name = #{labName} and student_id = #{studentId}
  </select>
  
  
</mapper>